
"""
This file was generated by graphql-schema-generator which is
maintained by prisma-korea.

Do not make changes to this file directly.
Read more about in https://github.com/prisma-korea/graphql-schema-generator.
"""
type Query {
  client(id: ID!): Client
  clients: [Client!]!
  clientlocation(id: ID!): ClientLocation
  clientlocations: [ClientLocation!]!
  worker(id: ID!): Worker
  workers: [Worker!]!
  workerlocation(id: ID!): WorkerLocation
  workerlocations: [WorkerLocation!]!
  admin(id: ID!): Admin
  admins: [Admin!]!
  workerservice(id: ID!): WorkerService
  workerservices: [WorkerService!]!
  service(id: ID!): Service
  services: [Service!]!
  section(id: ID!): Section
  sections: [Section!]!
  servicesection(id: ID!): ServiceSection
  servicesections: [ServiceSection!]!
  work(id: ID!): Work
  works: [Work!]!
  worklocation(id: ID!): WorkLocation
  worklocations: [WorkLocation!]!
}

input ClientCreateInput {
  name: String!
  email: String!
  password: String!
  emailVerified: Boolean
  gender: Gender
  joinedDate: DateTime!
  address: String
  country: String
  phone: String
  phoneVerified: Boolean
  avatar: String
  dob: DateTime
  bio: String
  verified: Boolean
  location: ClientLocation
  work: [Work!]!
}

input ClientUpdateInput {
  name: String
  email: String
  password: String
  emailVerified: Boolean
  gender: Gender
  joinedDate: DateTime
  address: String
  country: String
  phone: String
  phoneVerified: Boolean
  avatar: String
  dob: DateTime
  bio: String
  verified: Boolean
  location: ClientLocation
  work: [Work!]
}

input ClientLocationCreateInput {
  longitude: Float!
  latitude: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  client: Client!
}

input ClientLocationUpdateInput {
  longitude: Float
  latitude: Float
  createdAt: DateTime
  updatedAt: DateTime
  client: Client
}

input WorkerCreateInput {
  name: String!
  email: String!
  password: String!
  emailVerified: Boolean
  gender: Gender
  joinedDate: DateTime!
  address: String
  country: String
  phone: String
  phoneVerified: Boolean
  avatar: String
  dob: DateTime
  bio: String
  verified: Boolean
  location: WorkerLocation
  services: [WorkerService!]!
  work: [Work!]!
}

input WorkerUpdateInput {
  name: String
  email: String
  password: String
  emailVerified: Boolean
  gender: Gender
  joinedDate: DateTime
  address: String
  country: String
  phone: String
  phoneVerified: Boolean
  avatar: String
  dob: DateTime
  bio: String
  verified: Boolean
  location: WorkerLocation
  services: [WorkerService!]
  work: [Work!]
}

input WorkerLocationCreateInput {
  longitude: Float!
  latitude: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  worker: Worker!
}

input WorkerLocationUpdateInput {
  longitude: Float
  latitude: Float
  createdAt: DateTime
  updatedAt: DateTime
  worker: Worker
}

input AdminCreateInput {
  name: String!
  email: String!
  password: String!
  joinedDate: DateTime!
}

input AdminUpdateInput {
  name: String
  email: String
  password: String
  joinedDate: DateTime
}

input WorkerServiceCreateInput {
  worker: Worker!
  service: Service!
}

input WorkerServiceUpdateInput {
  worker: Worker
  service: Service
}

input ServiceCreateInput {
  title: String!
  description: String
  createdAt: DateTime!
  sections: [ServiceSection!]!
  workmen: [WorkerService!]!
  work: [Work!]!
}

input ServiceUpdateInput {
  title: String
  description: String
  createdAt: DateTime
  sections: [ServiceSection!]
  workmen: [WorkerService!]
  work: [Work!]
}

input SectionCreateInput {
  title: String!
  description: String
  createdAt: DateTime!
  services: [ServiceSection!]!
}

input SectionUpdateInput {
  title: String
  description: String
  createdAt: DateTime
  services: [ServiceSection!]
}

input ServiceSectionCreateInput {
  section: Section!
  service: Service!
}

input ServiceSectionUpdateInput {
  section: Section
  service: Service
}

input WorkCreateInput {
  createdAt: DateTime!
  client: Client!
  worker: Worker!
  service: Service!
  location: WorkLocation
  requestTime: DateTime!
  workStartTime: DateTime
  workEndTime: DateTime
  paymentId: String
}

input WorkUpdateInput {
  createdAt: DateTime
  client: Client
  worker: Worker
  service: Service
  location: WorkLocation
  requestTime: DateTime
  workStartTime: DateTime
  workEndTime: DateTime
  paymentId: String
}

input WorkLocationCreateInput {
  longitude: Float!
  latitude: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  work: Work!
}

input WorkLocationUpdateInput {
  longitude: Float
  latitude: Float
  createdAt: DateTime
  updatedAt: DateTime
  work: Work
}

type Mutation {
  createClient(client: ClientCreateInput!): Client
  updateClient(client: ClientUpdateInput!): Client
  deleteClient(id: ID!): Client
  createClientLocation(clientlocation: ClientLocationCreateInput!): ClientLocation
  updateClientLocation(clientlocation: ClientLocationUpdateInput!): ClientLocation
  deleteClientLocation(id: ID!): ClientLocation
  createWorker(worker: WorkerCreateInput!): Worker
  updateWorker(worker: WorkerUpdateInput!): Worker
  deleteWorker(id: ID!): Worker
  createWorkerLocation(workerlocation: WorkerLocationCreateInput!): WorkerLocation
  updateWorkerLocation(workerlocation: WorkerLocationUpdateInput!): WorkerLocation
  deleteWorkerLocation(id: ID!): WorkerLocation
  createAdmin(admin: AdminCreateInput!): Admin
  updateAdmin(admin: AdminUpdateInput!): Admin
  deleteAdmin(id: ID!): Admin
  createWorkerService(workerservice: WorkerServiceCreateInput!): WorkerService
  updateWorkerService(workerservice: WorkerServiceUpdateInput!): WorkerService
  deleteWorkerService(id: ID!): WorkerService
  createService(service: ServiceCreateInput!): Service
  updateService(service: ServiceUpdateInput!): Service
  deleteService(id: ID!): Service
  createSection(section: SectionCreateInput!): Section
  updateSection(section: SectionUpdateInput!): Section
  deleteSection(id: ID!): Section
  createServiceSection(servicesection: ServiceSectionCreateInput!): ServiceSection
  updateServiceSection(servicesection: ServiceSectionUpdateInput!): ServiceSection
  deleteServiceSection(id: ID!): ServiceSection
  createWork(work: WorkCreateInput!): Work
  updateWork(work: WorkUpdateInput!): Work
  deleteWork(id: ID!): Work
  createWorkLocation(worklocation: WorkLocationCreateInput!): WorkLocation
  updateWorkLocation(worklocation: WorkLocationUpdateInput!): WorkLocation
  deleteWorkLocation(id: ID!): WorkLocation
}

scalar DateTime

enum Gender {
  MALE
  FEMALE
}

type Client {
  id: ID!
  name: String!
  email: String!
  password: String!
  emailVerified: Boolean
  gender: Gender
  joinedDate: DateTime!
  address: String
  country: String
  phone: String
  phoneVerified: Boolean
  avatar: String
  dob: DateTime
  bio: String
  verified: Boolean
  location: ClientLocation
  work: [Work!]!
}

type ClientLocation {
  id: ID!
  longitude: Float!
  latitude: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  client: Client!
}

type Worker {
  id: ID!
  name: String!
  email: String!
  password: String!
  emailVerified: Boolean
  gender: Gender
  joinedDate: DateTime!
  address: String
  country: String
  phone: String
  phoneVerified: Boolean
  avatar: String
  dob: DateTime
  bio: String
  verified: Boolean
  location: WorkerLocation
  services: [WorkerService!]!
  work: [Work!]!
}

type WorkerLocation {
  id: ID!
  longitude: Float!
  latitude: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  worker: Worker!
}

type Admin {
  id: ID!
  name: String!
  email: String!
  password: String!
  joinedDate: DateTime!
}

type WorkerService {
  worker: Worker!
  service: Service!
}

type Service {
  id: ID!
  title: String!
  description: String
  createdAt: DateTime!
  sections: [ServiceSection!]!
  workmen: [WorkerService!]!
  work: [Work!]!
}

type Section {
  id: ID!
  title: String!
  description: String
  createdAt: DateTime!
  services: [ServiceSection!]!
}

type ServiceSection {
  section: Section!
  service: Service!
}

type Work {
  id: ID!
  createdAt: DateTime!
  client: Client!
  worker: Worker!
  service: Service!
  location: WorkLocation
  requestTime: DateTime!
  workStartTime: DateTime
  workEndTime: DateTime
  paymentId: String
}

type WorkLocation {
  id: ID!
  longitude: Float!
  latitude: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  work: Work!
}