/* eslint-disable @typescript-eslint/no-explicit-any */
'use strict';
/** NOTE: This file was autogenerated and customized to fit the use case of this project.
 * Do not override with any other autogenerated file.
 */
const fs = require('fs');
const path = require('path');
const basename = path.basename(__filename);
const env = process.env.NODE_ENV || 'development';
const config = require(__dirname + '/../config/config.js')[env];
const Sequelize = require('sequelize');

const db: any = {};

let sequelize: any;
if (config.use_env_variable) {
  sequelize = new Sequelize(process.env[config.use_env_variable], config);
} else {
  sequelize = new Sequelize(config.database, config.username, config.password, config);
}

fs.readdirSync(__dirname)
  .filter((file: string) => {
    return file.indexOf('.') !== 0 && file !== basename && file.slice(-3) === '.ts';
  })
  .forEach((file: string) => {
    const model = require(path.join(__dirname, file))(sequelize, Sequelize.DataTypes);
    db[model.name as keyof typeof db] = model;
  });

Object.keys(db).forEach((modelName: string) => {
  if (db[modelName as keyof typeof db].associate) {
    db[modelName as keyof typeof db].associate(db);
  }
});

db.sequelize = sequelize;
db.Sequelize = Sequelize;

module.exports = db;
